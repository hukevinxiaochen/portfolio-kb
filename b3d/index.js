// The build module accomplishes the task of turning our MDX
//  into HTML. It does so with the following approach:
//    - Is the TEST environment variable truthy?
//    - If not, we are in PRODUCTION mode and we ask:
//      - Does our destination build directory exist?
//      - Make the directory before writing the HTML generated by compose
//        to file.
//      - Otherwise, just write the HTML generated by compose to file.
// import compose from "../g7r";
require("dotenv").config();
const compose = require("../g7r");
const path = require("path");
const fs = require("fs");

/**
 * planBuild -
 *
 * @param {string} destDir - the name of the directory in which to output
 * a completed static site.
 * @param {string} destFile - the filename of the final site,
 * statically rendered.
 */
const planBuild = (destDir = "dist", destFile = "index.html") => {
  return {
    destDirExists: fs.existsSync(destDir),
    destFileExists: fs.existsSync(path.join(destDir, destFile)),
  };
};

// private
const writePath = path.resolve(__dirname, "..", "dist", "index.html");
const writeDir = path.resolve(__dirname, "..", "dist");

// output some HTML using compose
// when run in PRODUCTION mode
if (!process.env.TEST) {
  const { destDirExists, destFileExists } = planBuild(writeDir, writePath);
  compose()
    .then((htmlData) => {
      if (destDirExists) {
        fs.writeFile(writePath, htmlData, () => {
          console.log("Successfully built index.html");
        });
      } else {
        fs.mkdirSync(writeDir);
        fs.writeFile(writePath, htmlData, () => {
          console.log("Successfully built index.html");
        });
      }
    })
    .catch((error) => {
      console.log("We caught an error!");
      console.error(error);
    });
}

module.exports = planBuild;
